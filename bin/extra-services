#!/bin/sh
set -eu

bin_dir="$(readlink -f "$(dirname "$0")")"
root_dir="$(readlink -f "$(dirname "${bin_dir}")")"
target=/userdata/system/services

print_usage() {
  cat >&2 <<EOF
Lifecycle management for batocera-extra services

Usage: $(basename "${0}") <ACTION> [OPTION]...

where <ACTION> is one of

  install     Install all non-hidden services
  register    Install and register all non-hidden services
  unregister  Stop and unregister all non-hidden services
  uninstall   Stop, unregister and permanently uninstall all non-hidden services
  status      Show started services (-h for help)

Services whose directory name starts with a dot ('.') are hidden.
EOF
}

services_find() {
  find "${root_dir}" -mindepth 1 -maxdepth 1 -type d -not -name '.*' -exec test -x '{}/start' \; -print
}

services_status() {
  "${bin_dir}/.status" "${@}"
}

services_install() {
  if [ ! -d "${target}" ]; then
    mkdir -p "${target}"
  fi

  services_find | while read -r path; do
    if [ -x "${path}/install" ]; then
      "${path}/install"
    fi
  done
}

services_register() {
  services_install
  services_find | while read -r path; do
    "${path}/service" register
  done
}

services_unregister() {
  services_find | while read -r path; do
    service="$("${path}/service" name)"
    batocera-services stop "${service}"
    "${path}/service" unregister
  done
}

services_uninstall() {
  services_unregister
  services_find | while read -r path; do
    if [ -x "${path}/uninstall" ]; then
      "${path}/uninstall"
    fi
  done

  rmdir --ignore-fail-on-non-empty "${target}"
}

main() {
  if [ "${#}" -eq 0 ]; then
    print_usage
    return 1
  fi
  action="${1}"
  shift
  case "${action}" in
    install)    services_install       ;;
    uninstall)  services_uninstall     ;;
    register)   services_register      ;;
    unregister) services_unregister    ;;
    status)     services_status "${@}" ;;
    *)
  esac
}

main "${@}"
